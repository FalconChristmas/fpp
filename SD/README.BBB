# FPP BBB Images creation notes (work in progress)
#
# FPP images are currently based on the following Debian BeagleBone images:
# bone-debian-9.2-iot-armhf-2017-10-10-4gb.img
#
# The below steps (much can be run via copy/paste into a terminal) will
# prepare the "clean image" from above to have the appropriate 
# dependencies installed, kernel updated, bootloaders, etc... ready
# to run the FPP_Install script.    At this point, parts of it
# require editing of text files with vim/nano.  In particular the
# /boot/uEnv.txt file and the various files in /lib/systemd/system
#
# Make sure you read all the comment in this file and follow 
# any instructions they may specify.
#
# After all the steps in this file is compile, reboot and then run
# the FPP_Install_BBB.sh script


sudo apt-get update
sudo apt-get upgrade
cd /opt/scripts
git pull
cd /opt/scripts/tools
sudo ./update_kernel.sh --lts-4_14

# delete old kernels and modules in /boot and /lib/modules
# and in /boot/dtbs

cd /opt/scripts/tools/developers/
sudo ./update_bootloader.sh


echo "vm.min_free_kbytes=16384" >> /etc/sysctl.conf

cd ~
vim /boot/uEnv.txt
#     enable_uboot_overlays=1
#     disable_uboot_overlay_video=1
#     disable_uboot_overlay_audio=1
#     disable_uboot_overlay_adc=1
#     uboot_overlay_pru=/lib/firmware/AM335X-PRU-UIO-00A0.dtbo


cd /opt/backup/uboot
export BOOTLOADERVER=v2018.01-r8
wget https://rcn-ee.com/repos/bootloader/am335x_evm/MLO-am335x_evm-${BOOTLOADERVER}
wget https://rcn-ee.com/repos/bootloader/am335x_evm/u-boot-am335x_evm-${BOOTLOADERVER}.img
mv -f MLO-am335x_evm-${BOOTLOADERVER} MLO
mv -f u-boot-am335x_evm-${BOOTLOADERVER}.img u-boot.img

## need the latest version for the PocketBeagle pins
cd /opt/source/bb.org-overlays
git pull
cp tools/beaglebone-universal-io/config-pin /usr/bin/config-pin


apt-get -y --purge autoremove

apt-get install alsa-utils ccache bzip2 samba rsync vsftpd shellinabox vorbis-tools \
    bash-completion exfat-fuse btrfs-tools ntp ethtool sysstat tcpdump  \
    php php-cli php-common php-curl php-fpm php-mcrypt php-pear \
    python-daemon python-smbus \
    ola ola-python libola-dev libola1 libboost-dev libjsoncpp-dev libtag1-dev \
    libconvert-binary-c-perl libjson-perl perlmagick \
    libavcodec-dev libavformat-dev libswresample-dev libsdl2-dev \
    sqlite3 php-sqlite3 php-zip zip unzip \
    mailutils librtmidi-dev libcurl4-openssl-dev


#remove a bunch of modules that aren't neeeded, free's up space
apt-get remove --purge roboticscape nodejs c9-core-installer \
    doc-beaglebone-getting-started doc-beaglebonegreen-getting-started doc-seeed-bbgw-getting-started \
    bonescript bone101 bb-node-red-installer \
    ardupilot-copter-bbbmini ardupilot-copter-blue ardupilot-plane-bbbmini ardupilot-plane-blue ardupilot-rover-bbbmini ardupilot-rover-blue
rm /etc/modules-load.d/roboticscape_modules.conf
# remove a bunch of source that is not needed, free's up space
rm -rf /usr/local/lib/node_modules
rm -rf /var/lib/cloud9
rm -rf /opt/source/Robotics_Cape_Installer
rm -rf /opt/source/dtb*
rm -rf /opt/source/u-boot*
rm -rf /opt/source/rcpy
rm -rf /opt/source/pyctrl
rm -rf /opt/source/fb-test-app*
rm -rf /opt/source/beagle-tester*
rm -rf /opt/source/dtb*
rm -rf /opt/source/BB*
rm -rf /opt/source/adafruit*
rm -rf /opt/source/Userspace*
rm /usr/local/bin/node-red*
rm -rf /var/cache/doc-beaglebone-getting-started
rm -rf /usr/share/beagle-tester
rm -rf /usr/sbin/beagle-tester*
rm -rf /lib/systemd/system/beagle-tester.service
rm -rf /etc/udev/rules.d/beagle-tester.rules
curl -L https://cpanmin.us | perl - --sudo App::cpanminus
echo "yes" | cpanm -fin Test::Tester File::Map Net::WebSocket::Server Net::PJLink

apt-get -y clean
apt-get -y --purge autoremove
apt-get -y clean


echo "blacklist spidev" > /etc/modprobe.d/blacklist-spidev.conf
echo "# allocate 768K instead of the default 256K" > /etc/modprobe.d/uio_pruss.conf
echo "options uio_pruss extram_pool_sz=786432" >> /etc/modprobe.d/uio_pruss.conf


#need to reboot to pickup new kernel so install of headers will work
reboot


apt-get install linux-headers-4.14.12-ti-r24
apt-get install dkms firmware-ti-connectivity
# the above installs the 4.9 headers which we don't use
rm -rf /usr/src/linux-headers-4.9*

cd /opt
git clone https://github.com/pvaret/rtl8192cu-fixes
dkms add ./rtl8192cu-fixes
dkms install 8192cu/1.10
depmod -a
cp ./rtl8192cu-fixes/blacklist-native-rtl8192.conf /etc/modprobe.d/
cp ./rtl8192cu-fixes/8192cu-disable-power-management.conf /etc/modprobe.d/

cd /opt
git clone https://github.com/zebulon2/rtl8812au-driver-5.2.9
ln -s /opt/rtl8812au-driver-5.2.9 /usr/src/rtl8812au-5.2.9
cd rtl8812au-driver-5.2.9
#wget rtl8812au /tmp/rtl8812au
patch -p1 < /tmp/rtl8812au
dkms add -m rtl8812au -v 5.2.9
dkms install rtl8812au/5.2.9

echo "options 8812au rtw_power_mgnt=0" > /etc/modprobe.d/8812au-disable-power-management.conf

#prefer ipv4
echo "precedence ::ffff:0:0/96  100" >>  /etc/gai.conf


cd /opt
git clone https://github.com/beagleboard/am335x_pru_package
cd am335x_pru_package
make
make install

# need to edit some files... sed/awk/perl can do this automatically?
#vim /lib/systemd/system/apache2.service
#    PrivateTmp=false
#vim /etc/default/shellinabox
#    add -t to args
#vim /etc/connman/main.conf
#    PreferredTechnologies=wifi,ethernet


#INvestigate:
#a2enmod proxy_fcgi setenvif
#a2enconf php7.0-fpm



