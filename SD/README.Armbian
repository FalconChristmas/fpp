FPP on Armbian has been tested on various OrangePi SBC's running the
"Bullseye" based Armbian images.

These are available from https://www.armbian.com/
Specific images names and versions are listed below.

- Orange Pi Zero+
  - Armbian_22.02.1_Orangepizero_bullseye_current_5.15.25.img
- Orange Pi Zero 2
  - Armbian_22.02.2_Orangepizero2_bullseye_legacy_4.9.255.img
- LePotato
  - Armbian_22.11.1_Lepotato_bullseye_current_5.19.17_minimal.img
 
  
Note: this will get a BASIC FPP player running on the device.   Things like e1.31
output, sound, etc.. will likely work.   Any hats/capes for pixels/panels, video,
etc... will likely not work.  If you search Armbians forums, you may be able to
get an HDMI framebuffer working on your device by editing the /boot/armbianEnv.txt
file with settings specific to the device.   That would allow a Virtual Matrix
to work, but not any sort of accelerated video.   You can have video redirected
to the Virtual Matrix, but that will use software decoding/scaling.  HiDef videos
will likely not be usable in that case.   In some cases, custom args can be sent
into VLC to direct video to a specific DRI device or use a specific pixel format.
On LePotato, you can try:
--kms-device /dev/dri/card1 --kms-connector HDMI-A-1 --kms-drm-chroma XR24


Note: Certain parts of installing FPP (ex: building VLC) will utilize all cores of
the SBC to near 100% for an extended period of time.   If the CPU does not have
heat sinks/fans, it may shutdown in the middle of installing due to thermal limits.
If this happens, you need to restart from a fresh image.  We'd suggest adding
heat sinks or fans to keep thermals under control, but lowering the CPU frequency
can also be a big help.   Before running FPP_Install.sh, run a command like:

cpufreq-set -u 800000

to lock the CPU to 800Mhz or lower.



Note eMMC: If the SBC has an eMMC and you would like to install FPP onto the eMMC, 
you need to use armbian-config to copy the system to the eMMC.  This can be done
before or after getting FPP up and running.   Doing it before is quicker as there
would be less data needing to be copied, but you can install FPP on the SD
card as normal and then use that to copy to the eMMC of multiple devices.



=============================================================================
== If the intention is to build an image similar to the Pi/BBB images,
== then the partition will need to be resized and the auto-expand disabled
==
== If this is to build a personal image, these steps can be skipped

Resize the root partition to 3.5GB using fdisk (substitute the proper device
for your SD card).

    fdisk /dev/sdb
    p
    (Note the original start block of partition 2, you will need this later)
    d
    1
    n
    p
    1
    (Replace 8192 with the original start block of partition 1 noted earlier)
    8192
    (FIXME, downsize this value once install is tested)
    +3500M
    p
    w

FSCK and resize the root partition (again, use your device name.

    e2fsck -f /dev/sdb1
    resize2fs /dev/sdb1


Mount the partition and turn off the auto-resize
mount /dev/sdb1 /mnt
touch /mnt/root/.no_rootfs_resize
umount /mnt
=============================================================================


Insert into the SBC and boot.


Commands to run after boot:
Login via ssh as root (default Armbian password for root is 1234)

#######################
# After reboot
# check root filesystem size (should be at least ~3.4GB)
df -k
# update packages
apt-get -y update
apt-get -y upgrade

shutdown -r now


# After reboot, re-loginas root and run:
wget --no-check-certificate -O ./FPP_Install.sh https://raw.githubusercontent.com/FalconChristmas/fpp/master/SD/FPP_Install.sh
chmod 700 ./FPP_Install.sh
./FPP_Install.sh

