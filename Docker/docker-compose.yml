version: '3'

# This docker-compose.yml file is suited for end users wishing to run
# FPP in a docker container for testing or production use.  Read the
# comments throughout the file for optional configurations.

# To use, you will need to create a directory to hold the FPP docker
# container files.  This config uses /docker/fpp-docker as an example.
# Under this directory, you will need to create a 'media' subdirectory
# to house persistent data and configuration for FPP.  The media directory
# will be mounted on /home/fpp/media inside the container.  To use a
# local copy of the FPP git repository to allow modification of the
# files, clone the FPP repository into a 'fpp' subdirectory and uncomment
# the fpp line in the volumes section below.  This will cause the local fpp
# subdirectory to be mounted on /opt/fpp inside the container.

# Setup:
#
# mkdir /docker/fpp-docker
# cd /docker/fpp-docker
# wget -O ./docker-compose.yml https://raw.githubusercontent.com/FalconChristmas/fpp/master/Docker/docker-compose.yml
# mkdir media
# chmod 770 media
# chown 500:500 media

# To start the container and keep it running:
#
# cd /docker/fpp-docker
# docker-compose up -d

# To stop the running container:
#
# cd /docker/fpp-docker
# docker-compose down

services:
  fpp-docker:
    container_name: fpp-docker
    image: falconchristmas/fpp:latest
    restart: always

    # FPP will report this hostname via MultiSync
    hostname: fpp-docker

    volumes:
      - ./media:/home/fpp/media
      # Uncomment the following line if you create a 'fpp' subdirectory
      # containing a git clone of the FPP code repository.  This is mainly
      # for developer use
      #- ./fpp:/opt/fpp

    environment:
      # To allow the instance to report its external IP, you can optionally
      # define a FPP_DOCKER_IP environment variable with the external IP
      - FPP_DOCKER_IP=192.168.1.10
      - TZ=America/Los_Angeles

    # By Default, we don't run privileged containers.  If you need to 
    # access the sound card, this may be required.

    # privileged: true

    devices:
      # To pass through an audio card, entries similar to the following
      # should work.  The device names may be different depending on
      # how many sound cards are present in the host system.  The 'C0'
      # portion of the file names is Card 0, 'D0' is Device 0.
      - /dev/snd/controlC0
      - /dev/snd/pcmC0D0c
      - /dev/snd/pcmC0D0p
      - /dev/snd/seq
      - /dev/snd/timer
      # If using a USB sound card such as the Vast FMT-212R with RDS, and
      # want to allow the container to talk to the USB device to configure
      # RDS, you can find out the USB Bus and Device numbers of the device
      # using lsusb and allow the container to talk to that single USB
      # device directly.
      #
      # For the following USB device (a Vast FMT-212R):
      # "lsusb | grep 0451:2100"
      # Bus 002 Device 006: ID 0451:2100 Texas Instruments, Inc.
      #
      # Use the following config line to pass through Bus 2 Device 6:
      # - /dev/bus/usb/002/006
      #
      # If you wish to pass though all sound cards and USB devices
      # these commands can be used. 
      # - /dev/snd:/dev/snd  # Maps all hardware sound cards regardless of hardware architecture 
      # - /dev/usb:/dev/usb  # Maps all USB sound cards regardless of hardware architecture 
      # - /run/dbus/:/run/dbus/ # Allows FPP to use dbus to control ALSA sound cards, needs "privileged: true" above


      # Include the IP in the port list to bind to a specific IP or leave off
      # the IP and just use port:port to allow traffic on any IP.  If you are
      # running multiple FPP containers all listening on port 80, you will
      # need each to have its own external IP configured as a secondary on
      # the physical host.
    ports:
      - "192.168.1.10:80:80/tcp" # Web UI
      - "192.168.1.10:4048:4048/udp" # DDP
      - "192.168.1.10:5568:5568/udp" # sACN/E1.31
      - "192.168.1.10:32320:32320/udp" # FPP MultiSync
      - "192.168.1.10:32322:32322/tcp" # FPP fppd API
      - "192.168.1.10:32328:32328/tcp" # FPP HTTP Virtual Display
    # Uncomment BOTH networks sections below to create a second container
    # interface tied to a physical network interface which is connected
    # to a ColorLight.  You can also use this example config to create a
    # 'show network' on a dedicated interface with its own subnet and use
    # this network for sACN/E1.31, DDP, or ArtNet.
    #
    # NOTE: For networking, the networks defined are assigned to the eth*
    #       interfaces in alphanumeric order.  In order to function
    #       correctly, 'default' should sort first so it is assigned to eth0.
    #    networks:
    #      default:
    #      net-colorlight:

    #networks:
    # uncomment the default network and its ipam section to use a specific subnet
    #  default:
    #    ipam:
    #      driver: default
    #      config:
    #      - subnet: 10.0.254.0/24
    #  net-colorlight:
    #    driver: macvlan
    #    driver_opts:
    #      parent: eno4   # dedicated physical interface connected to a ColorLight
    # uncomment the ipam section to assign a specific subnet
    #    ipam:
    #      driver: default
    #      config:
    #      - subnet: 10.0.255.0/24

