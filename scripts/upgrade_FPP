#!/bin/bash

BINDIR=$(cd $(dirname $0) && pwd)

. ${BINDIR}/common
. ${BINDIR}/functions


if [ "x$1" = "x" ]
then
	echo "USAGE: $0 VERSION"
	exit 1
fi

teeOutput

echo "$0 Upgrading FPP version to $1"

echo "Stopping fppd"
${SUDO} ${FPPDIR}/scripts/fppd_stop

echo "Cleaning up any compiled binaries"
cleanCompiledBinaries

echo "Adding newfeatures remote if not present"
cd ${FPPDIR}
if ! git remote get-url newfeatures > /dev/null 2>&1; then
    if [ "x${FPPDIR}" = "x/opt/fpp" ]; then
        $SUDO git remote add newfeatures https://github.com/FalconChristmas/fpp-new-feature-testing.git
    else
        sudo -u ${FPPUSER} git remote add newfeatures https://github.com/FalconChristmas/fpp-new-feature-testing.git
    fi
fi

echo "Switching git branch to $1"
if [ "x${FPPDIR}" = "x/opt/fpp" ]
then
	cd ${FPPDIR} && $SUDO git submodule foreach git reset --hard && $SUDO git checkout $1 && $SUDO git pull
    if  [ "${FPPPLATFORM}" = "Raspberry Pi" ]; then
        cd ${FPPDIR} && $SUDO git submodule sync && $SUDO git submodule update --init
    fi

    $SUDO ${SCRIPTDIR}/upgrade_config
else
	cd ${FPPDIR} && sudo -u ${FPPUSER} git submodule foreach git reset --hard && sudo -u ${FPPUSER} git checkout $1 && sudo -u ${FPPUSER} git pull
    if  [ "${FPPPLATFORM}" = "Raspberry Pi" ]; then
        cd ${FPPDIR} && sudo -u ${FPPUSER} git submodule sync && sudo -u ${FPPUSER} git submodule update --init
    fi

    sudo -u ${FPPUSER} ${SCRIPTDIR}/upgrade_config
fi


echo "Compiling Binaries"
compileBinaries

# Delete any statistics
/usr/bin/curl -X DELETE http://localhost/api/statistics/usage

